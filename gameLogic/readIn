    def readIn(self):
        forbiddenSpaces = set([])
        for i in self.ships:
            size = i[1]
            for j in range(1, i[0]+1):
                print("Position the " + str(j) + ". ship of size " + str(size) + "!")
                coordinates = input().lower().split('-')
                if hl.validateStringCoordinate(coordinates[0]) & hl.validateStringCoordinate(coordinates[1]):
                    coordOne = hl.stringToCoordinate(coordinates[0])
                    coordTwo = hl.stringToCoordinate(coordinates[1])
                else: break


                if(coordOne%10 == coordTwo%10) and (int(abs(coordTwo - coordOne) / 10 + 1) == size):
                    coordinates = [k for k in range(min(coordOne, coordTwo), max(coordOne, coordTwo)+10, 10)]
                elif (abs(coordTwo - coordOne) + 1 == size):
                    coordinates = [k for k in range(min(coordOne, coordTwo), max(coordOne, coordTwo)+1)]
                else:
                    print("Rossz koordinatak, vagy nem sorban/oszlopban van a hajo, vagy nem jo meretu!")
                    break

                neighbours = set([])
                for coord in coordinates:
                    neighbours.update(hl.getNeighbours(coord))
                #[neighbours.remove(coord) for coord in coordinates]
                if len(forbiddenSpaces.intersection(set(coordinates))) == 0:
                    for k in coordinates:
                        self.state[k] = hl.States.SHIP
                    forbiddenSpaces.update(neighbours)
                    forbiddenSpaces.update(coordinates)
                    self.playerOneShips.append(coordinates)
                else:
                    print("Rossz koordinatak, nem lehet ilyen kozel helyezni hajot egy masikhoz!")
                    break

                #print(forbiddenSpaces)
                self.printState()
                #print(self.playerOneShips)